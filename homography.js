// Closed Form Solution to Homography
// https://quadst.rip/warp.html
// https://gist.github.com/LingDong-/b7940e262e30eddbb4f32383d8a0d28d

let DBL_EPS = 0.0001;
function disturb(x){
  let EPS = DBL_EPS;
  return x + Math.random()*EPS*2-EPS;
}

function computeHMatrix(
  x1, y1, x2, y2, x3, y3, x4, y4,
  u1, v1, u2, v2, u3, v3, u4, v4
){
  x1 = disturb(x1); y1 = disturb(y1);
  x2 = disturb(x2); y2 = disturb(y2);
  x3 = disturb(x3); y3 = disturb(y3);
  x4 = disturb(x4); y4 = disturb(y4);
  u1 = disturb(u1); v1 = disturb(v1);
  u2 = disturb(u2); v2 = disturb(v2);
  u3 = disturb(u3); v3 = disturb(v3);
  u4 = disturb(u4); v4 = disturb(v4);
  
  let a = -((-(v1*(v1 - v2)*(u3*v1 - u1*v3)*(u3*(v1 - v2) + u1*(v2 - v3) 
  + u2*(-v1 + v3))*(x1*x1)*x3*(-(u3*v1*v2*x1*x3) + u3*v1*v4*x1*x3 + 
  u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - u4*v1*v3*x1*x4 - 
  u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - u4*v2*v3*x3*x4 - 
  u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - x3) + v3*v4*(x3 
  - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + v2*v4*(x2 - x4) 
  + v3*v4*(-x3 + x4)))*(u2*v3*x2*x3*y1 - u2*v4*x2*x3*y1 - 
  u1*v3*x1*x3*y2 + u1*v4*x1*x3*y2 - u2*v1*x1*x2*y3 + u1*v2*x1*x2*y3 - 
  u1*v4*x1*x2*y3 + u2*v4*x1*x2*y3 + u2*v1*x1*x2*y4 - u1*v2*x1*x2*y4 + 
  u1*v4*x1*x2*y4 - u2*v4*x1*x2*y4 + u1*v3*x1*x3*y4 - u1*v4*x1*x3*y4 - 
  u2*v3*x2*x3*y4 + u2*v4*x2*x3*y4 + u3*x3*(v1*x1*(y2 - y4) + v2*x2*(-y1 
  + y4) + v4*(x2*y1 - x1*y2 + x1*y4 - x2*y4)) + u4*(v3*x3*(-(x2*y1) + 
  x1*y2 - x1*y4 + x2*y4) + v1*x1*(-(x3*y2) + x2*y3 - x2*y4 + x3*y4) + 
  v2*x2*(x3*(y1 - y4) + x1*(-y3 + y4))))) - (u1*v2*x1*x2*x3 - 
  u1*v3*x1*x2*x3 - u4*v1*x1*x2*x4 - u1*v2*x1*x2*x4 + u4*v2*x1*x2*x4 + 
  u1*v4*x1*x2*x4 + u4*v1*x1*x3*x4 + u1*v3*x1*x3*x4 - u4*v3*x1*x3*x4 - 
  u1*v4*x1*x3*x4 - u4*v2*x2*x3*x4 + u4*v3*x2*x3*x4 + u3*x3*(v1*x1*(x2 - 
  x4) + v4*(x1 - x2)*x4 + v2*x2*(-x1 + x4)) + u2*x2*(v3*x3*(x1 - x4) + 
  v4*(-x1 + x3)*x4 + v1*x1*(-x3 + x4)))*(v1*x1*(-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(v3*(-x1 + x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 
  + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - 
  u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + 
  v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + 
  v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 
  - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - 
  y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + (u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 
  + y4)))) - (u2*v1*v3*x2*(x1 - x3) + u3*v1*v2*(-x1 + x2)*x3 + 
  u1*v2*v3*x1*(-x2 + x3))*(-(x1*(-(v1*x1) + v3*x3)*(v1*(u4*(-v1 + v2) + 
  u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + 
  u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - 
  v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + 
  u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) 
  + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + 
  y4)))) + (u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + 
  u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) 
  + (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4))))))/(-((u1*u4*(v2*x2 - v3*x3)*(x1 
  - x4) + u3*u4*(v1*x1 - v2*x2)*(x3 - x4) - u1*u3*(x1 - x3)*(v2*x2 - 
  v4*x4) + u2*(-(u4*(v1*x1 - v3*x3)*(x2 - x4)) + u3*(x2 - x3)*(v1*x1 - 
  v4*x4) + u1*(x1 - x2)*(v3*x3 - v4*x4)))*(v1*x1*(-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(v3*(-x1 + x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 
  + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - 
  u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + 
  v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + 
  v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 
  - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - 
  y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + (u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 
  + y4)))) - (u2*v1*v3*x2*(x1 - x3) + u3*v1*v2*(-x1 + x2)*x3 + 
  u1*v2*v3*x1*(-x2 + x3))*(-(x1*(-(v1*x1) + v3*x3)*(v1*(u4*(-v1 + v2) + 
  u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + 
  u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - 
  v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + 
  u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) 
  + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + 
  y4)))) + (u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + 
  u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) 
  + (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))) + (-(u3*v1*v2*x1*x3) + 
  u3*v1*v4*x1*x3 + u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - 
  u4*v1*v3*x1*x4 - u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - 
  u4*v2*v3*x3*x4 - u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - 
  x3) + v3*v4*(x3 - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + 
  v2*v4*(x2 - x4) + v3*v4*(-x3 + x4)))*(-((u2*u3*v1*x1*(x2 - x3) + 
  u1*u2*v3*(x1 - x2)*x3 + u1*u3*v2*x2*(-x1 + x3))*(-(x1*(-(v1*x1) + 
  v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + 
  v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + 
  u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + 
  v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + 
  v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + 
  u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4))))) + (-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(x1*(-(u3*v1*x1) + u1*v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - 
  v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + 
  v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 
  - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + 
  u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + 
  u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + 
  v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + 
  u1*(u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))));
  let b = (u1*v2*x1*x2*x3 - 
  u1*v3*x1*x2*x3 - u4*v1*x1*x2*x4 - u1*v2*x1*x2*x4 + u4*v2*x1*x2*x4 + 
  u1*v4*x1*x2*x4 + u4*v1*x1*x3*x4 + u1*v3*x1*x3*x4 - u4*v3*x1*x3*x4 - 
  u1*v4*x1*x3*x4 - u4*v2*x2*x3*x4 + u4*v3*x2*x3*x4 + u3*x3*(v1*x1*(x2 - 
  x4) + v4*(x1 - x2)*x4 + v2*x2*(-x1 + x4)) + u2*x2*(v3*x3*(x1 - x4) + 
  v4*(-x1 + x3)*x4 + v1*x1*(-x3 + x4)))/(u3*v1*v2*x1*x3 - 
  u3*v1*v4*x1*x3 - u3*v1*v2*x2*x3 + u3*v2*v4*x2*x3 - u4*v1*v2*x1*x4 + 
  u4*v1*v3*x1*x4 + u4*v1*v2*x2*x4 - u4*v2*v3*x2*x4 - u4*v1*v3*x3*x4 + 
  u4*v2*v3*x3*x4 + u3*v1*v4*x3*x4 - u3*v2*v4*x3*x4 + u1*x1*(v2*v3*(x2 - 
  x3) + v3*v4*(x3 - x4) + v2*v4*(-x2 + x4)) + u2*x2*(v1*v3*(-x1 + x3) + 
  v1*v4*(x1 - x4) + v3*v4*(-x3 + x4))) + ((u1*u4*(v2*x2 - v3*x3)*(x1 - 
  x4) + u3*u4*(v1*x1 - v2*x2)*(x3 - x4) - u1*u3*(x1 - x3)*(v2*x2 - 
  v4*x4) + u2*(-(u4*(v1*x1 - v3*x3)*(x2 - x4)) + u3*(x2 - x3)*(v1*x1 - 
  v4*x4) + u1*(x1 - x2)*(v3*x3 - v4*x4)))*(-(v1*(v1 - v2)*(u3*v1 - 
  u1*v3)*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + 
  v3))*(x1*x1)*x3*(-(u3*v1*v2*x1*x3) + u3*v1*v4*x1*x3 + u3*v1*v2*x2*x3 - 
  u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - u4*v1*v3*x1*x4 - u4*v1*v2*x2*x4 + 
  u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - u4*v2*v3*x3*x4 - u3*v1*v4*x3*x4 + 
  u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - x3) + v3*v4*(x3 - x4) + 
  v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + v2*v4*(x2 - x4) + 
  v3*v4*(-x3 + x4)))*(u2*v3*x2*x3*y1 - u2*v4*x2*x3*y1 - u1*v3*x1*x3*y2 
  + u1*v4*x1*x3*y2 - u2*v1*x1*x2*y3 + u1*v2*x1*x2*y3 - u1*v4*x1*x2*y3 + 
  u2*v4*x1*x2*y3 + u2*v1*x1*x2*y4 - u1*v2*x1*x2*y4 + u1*v4*x1*x2*y4 - 
  u2*v4*x1*x2*y4 + u1*v3*x1*x3*y4 - u1*v4*x1*x3*y4 - u2*v3*x2*x3*y4 + 
  u2*v4*x2*x3*y4 + u3*x3*(v1*x1*(y2 - y4) + v2*x2*(-y1 + y4) + 
  v4*(x2*y1 - x1*y2 + x1*y4 - x2*y4)) + u4*(v3*x3*(-(x2*y1) + x1*y2 - 
  x1*y4 + x2*y4) + v1*x1*(-(x3*y2) + x2*y3 - x2*y4 + x3*y4) + 
  v2*x2*(x3*(y1 - y4) + x1*(-y3 + y4))))) - (u1*v2*x1*x2*x3 - 
  u1*v3*x1*x2*x3 - u4*v1*x1*x2*x4 - u1*v2*x1*x2*x4 + u4*v2*x1*x2*x4 + 
  u1*v4*x1*x2*x4 + u4*v1*x1*x3*x4 + u1*v3*x1*x3*x4 - u4*v3*x1*x3*x4 - 
  u1*v4*x1*x3*x4 - u4*v2*x2*x3*x4 + u4*v3*x2*x3*x4 + u3*x3*(v1*x1*(x2 - 
  x4) + v4*(x1 - x2)*x4 + v2*x2*(-x1 + x4)) + u2*x2*(v3*x3*(x1 - x4) + 
  v4*(-x1 + x3)*x4 + v1*x1*(-x3 + x4)))*(v1*x1*(-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(v3*(-x1 + x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 
  + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - 
  u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + 
  v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + 
  v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 
  - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - 
  y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + (u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 
  + y4)))) - (u2*v1*v3*x2*(x1 - x3) + u3*v1*v2*(-x1 + x2)*x3 + 
  u1*v2*v3*x1*(-x2 + x3))*(-(x1*(-(v1*x1) + v3*x3)*(v1*(u4*(-v1 + v2) + 
  u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + 
  u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - 
  v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + 
  u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) 
  + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + 
  y4)))) + (u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + 
  u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) 
  + (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))))/((-(u3*v1*v2*x1*x3) + 
  u3*v1*v4*x1*x3 + u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - 
  u4*v1*v3*x1*x4 - u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - 
  u4*v2*v3*x3*x4 - u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - 
  x3) + v3*v4*(x3 - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + 
  v2*v4*(x2 - x4) + v3*v4*(-x3 + x4)))*(-((u1*u4*(v2*x2 - v3*x3)*(x1 - 
  x4) + u3*u4*(v1*x1 - v2*x2)*(x3 - x4) - u1*u3*(x1 - x3)*(v2*x2 - 
  v4*x4) + u2*(-(u4*(v1*x1 - v3*x3)*(x2 - x4)) + u3*(x2 - x3)*(v1*x1 - 
  v4*x4) + u1*(x1 - x2)*(v3*x3 - v4*x4)))*(v1*x1*(-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(v3*(-x1 + x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 
  + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - 
  u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + 
  v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + 
  v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 
  - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - 
  y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + (u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 
  + y4)))) - (u2*v1*v3*x2*(x1 - x3) + u3*v1*v2*(-x1 + x2)*x3 + 
  u1*v2*v3*x1*(-x2 + x3))*(-(x1*(-(v1*x1) + v3*x3)*(v1*(u4*(-v1 + v2) + 
  u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + 
  u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - 
  v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + 
  u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) 
  + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + 
  y4)))) + (u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + 
  u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) 
  + (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))) + (-(u3*v1*v2*x1*x3) + 
  u3*v1*v4*x1*x3 + u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - 
  u4*v1*v3*x1*x4 - u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - 
  u4*v2*v3*x3*x4 - u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - 
  x3) + v3*v4*(x3 - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + 
  v2*v4*(x2 - x4) + v3*v4*(-x3 + x4)))*(-((u2*u3*v1*x1*(x2 - x3) + 
  u1*u2*v3*(x1 - x2)*x3 + u1*u3*v2*x2*(-x1 + x3))*(-(x1*(-(v1*x1) + 
  v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + 
  v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + 
  u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + 
  v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + 
  v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + 
  u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4))))) + (-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(x1*(-(u3*v1*x1) + u1*v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - 
  v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + 
  v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 
  - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + 
  u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + 
  u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + 
  v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + 
  u1*(u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))));
  let c = (-(u1*v2*v4*x1*x2*x3) 
  + u1*v3*v4*x1*x2*x3 + u4*v1*v3*x1*x2*x4 + u1*v2*v3*x1*x2*x4 - 
  u4*v2*v3*x1*x2*x4 - u1*v3*v4*x1*x2*x4 - u4*v1*v2*x1*x3*x4 - 
  u1*v2*v3*x1*x3*x4 + u4*v2*v3*x1*x3*x4 + u1*v2*v4*x1*x3*x4 + 
  u4*v1*v2*x2*x3*x4 - u4*v1*v3*x2*x3*x4 + u3*x3*(v2*v4*x1*(x2 - x4) + 
  v1*v2*(x1 - x2)*x4 + v1*v4*x2*(-x1 + x4)) + u2*x2*(v1*v4*x3*(x1 - x4) 
  + v1*v3*(-x1 + x3)*x4 + v3*v4*x1*(-x3 + x4)))/(u3*v1*v2*x1*x3 - 
  u3*v1*v4*x1*x3 - u3*v1*v2*x2*x3 + u3*v2*v4*x2*x3 - u4*v1*v2*x1*x4 + 
  u4*v1*v3*x1*x4 + u4*v1*v2*x2*x4 - u4*v2*v3*x2*x4 - u4*v1*v3*x3*x4 + 
  u4*v2*v3*x3*x4 + u3*v1*v4*x3*x4 - u3*v2*v4*x3*x4 + u1*x1*(v2*v3*(x2 - 
  x3) + v3*v4*(x3 - x4) + v2*v4*(-x2 + x4)) + u2*x2*(v1*v3*(-x1 + x3) + 
  v1*v4*(x1 - x4) + v3*v4*(-x3 + x4))) + ((v2*(-(u1*u4*v3*(x2 - x3)*(x1 
  - x4)) + u1*u3*v4*(x1 - x3)*(x2 - x4) - u3*u4*v1*(x1 - x2)*(x3 - x4)) 
  + u2*(-(u3*v1*v4*(x2 - x3)*(x1 - x4)) + u4*v1*v3*(x1 - x3)*(x2 - x4) 
  - u1*v3*v4*(x1 - x2)*(x3 - x4)))*(-(v1*(v1 - v2)*(u3*v1 - 
  u1*v3)*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + 
  v3))*(x1*x1)*x3*(-(u3*v1*v2*x1*x3) + u3*v1*v4*x1*x3 + u3*v1*v2*x2*x3 - 
  u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - u4*v1*v3*x1*x4 - u4*v1*v2*x2*x4 + 
  u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - u4*v2*v3*x3*x4 - u3*v1*v4*x3*x4 + 
  u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - x3) + v3*v4*(x3 - x4) + 
  v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + v2*v4*(x2 - x4) + 
  v3*v4*(-x3 + x4)))*(u2*v3*x2*x3*y1 - u2*v4*x2*x3*y1 - u1*v3*x1*x3*y2 
  + u1*v4*x1*x3*y2 - u2*v1*x1*x2*y3 + u1*v2*x1*x2*y3 - u1*v4*x1*x2*y3 + 
  u2*v4*x1*x2*y3 + u2*v1*x1*x2*y4 - u1*v2*x1*x2*y4 + u1*v4*x1*x2*y4 - 
  u2*v4*x1*x2*y4 + u1*v3*x1*x3*y4 - u1*v4*x1*x3*y4 - u2*v3*x2*x3*y4 + 
  u2*v4*x2*x3*y4 + u3*x3*(v1*x1*(y2 - y4) + v2*x2*(-y1 + y4) + 
  v4*(x2*y1 - x1*y2 + x1*y4 - x2*y4)) + u4*(v3*x3*(-(x2*y1) + x1*y2 - 
  x1*y4 + x2*y4) + v1*x1*(-(x3*y2) + x2*y3 - x2*y4 + x3*y4) + 
  v2*x2*(x3*(y1 - y4) + x1*(-y3 + y4))))) - (u1*v2*x1*x2*x3 - 
  u1*v3*x1*x2*x3 - u4*v1*x1*x2*x4 - u1*v2*x1*x2*x4 + u4*v2*x1*x2*x4 + 
  u1*v4*x1*x2*x4 + u4*v1*x1*x3*x4 + u1*v3*x1*x3*x4 - u4*v3*x1*x3*x4 - 
  u1*v4*x1*x3*x4 - u4*v2*x2*x3*x4 + u4*v3*x2*x3*x4 + u3*x3*(v1*x1*(x2 - 
  x4) + v4*(x1 - x2)*x4 + v2*x2*(-x1 + x4)) + u2*x2*(v3*x3*(x1 - x4) + 
  v4*(-x1 + x3)*x4 + v1*x1*(-x3 + x4)))*(v1*x1*(-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(v3*(-x1 + x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 
  + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - 
  u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + 
  v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + 
  v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 
  - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - 
  y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + (u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 
  + y4)))) - (u2*v1*v3*x2*(x1 - x3) + u3*v1*v2*(-x1 + x2)*x3 + 
  u1*v2*v3*x1*(-x2 + x3))*(-(x1*(-(v1*x1) + v3*x3)*(v1*(u4*(-v1 + v2) + 
  u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + 
  u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - 
  v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + 
  u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) 
  + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + 
  y4)))) + (u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + 
  u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) 
  + (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))))/((-(u3*v1*v2*x1*x3) + 
  u3*v1*v4*x1*x3 + u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - 
  u4*v1*v3*x1*x4 - u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - 
  u4*v2*v3*x3*x4 - u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - 
  x3) + v3*v4*(x3 - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + 
  v2*v4*(x2 - x4) + v3*v4*(-x3 + x4)))*(-((u1*u4*(v2*x2 - v3*x3)*(x1 - 
  x4) + u3*u4*(v1*x1 - v2*x2)*(x3 - x4) - u1*u3*(x1 - x3)*(v2*x2 - 
  v4*x4) + u2*(-(u4*(v1*x1 - v3*x3)*(x2 - x4)) + u3*(x2 - x3)*(v1*x1 - 
  v4*x4) + u1*(x1 - x2)*(v3*x3 - v4*x4)))*(v1*x1*(-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(v3*(-x1 + x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 
  + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - 
  u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + 
  v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + 
  v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 
  - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - 
  y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + (u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 
  + y4)))) - (u2*v1*v3*x2*(x1 - x3) + u3*v1*v2*(-x1 + x2)*x3 + 
  u1*v2*v3*x1*(-x2 + x3))*(-(x1*(-(v1*x1) + v3*x3)*(v1*(u4*(-v1 + v2) + 
  u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + 
  u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - 
  v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + 
  u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) 
  + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + 
  y4)))) + (u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + 
  u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) 
  + (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))) + (-(u3*v1*v2*x1*x3) + 
  u3*v1*v4*x1*x3 + u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - 
  u4*v1*v3*x1*x4 - u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - 
  u4*v2*v3*x3*x4 - u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - 
  x3) + v3*v4*(x3 - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + 
  v2*v4*(x2 - x4) + v3*v4*(-x3 + x4)))*(-((u2*u3*v1*x1*(x2 - x3) + 
  u1*u2*v3*(x1 - x2)*x3 + u1*u3*v2*x2*(-x1 + x3))*(-(x1*(-(v1*x1) + 
  v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + 
  v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + 
  u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + 
  v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + 
  v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + 
  u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4))))) + (-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(x1*(-(u3*v1*x1) + u1*v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - 
  v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + 
  v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 
  - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + 
  u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + 
  u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + 
  v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + 
  u1*(u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))));
  let d = (-(v3*x2*x3*y1) - 
  v1*x1*x3*y2 + v3*x1*x3*y2 + v1*x1*x2*y3 + v2*x2*(x3*y1 - 
  x1*y3))/(-(u2*v1*x1*x2) + u1*v2*x1*x2 + u3*v1*x1*x3 - u1*v3*x1*x3 - 
  u3*v2*x2*x3 + u2*v3*x2*x3) + ((-(u1*v2*x1*x2*x3) + u1*v3*x1*x2*x3 + 
  u4*v1*x1*x2*x4 + u1*v2*x1*x2*x4 - u4*v2*x1*x2*x4 - u1*v4*x1*x2*x4 - 
  u4*v1*x1*x3*x4 - u1*v3*x1*x3*x4 + u4*v3*x1*x3*x4 + u1*v4*x1*x3*x4 + 
  u4*v2*x2*x3*x4 - u4*v3*x2*x3*x4 + u2*x2*(v1*x1*(x3 - x4) + v4*(x1 - 
  x3)*x4 + v3*x3*(-x1 + x4)) + u3*x3*(v2*x2*(x1 - x4) + v4*(-x1 + 
  x2)*x4 + v1*x1*(-x2 + x4)))*(u1*(v2 - v3)*(v2*v3*(-(x2*y1) + x3*y1 + 
  x1*y2 - x1*y3) + v1*(v2*x2*y1 - v3*x3*y1 - v2*x1*y2 + v3*x1*y3)) + 
  u2*(v1 - v3)*(v1*(v3*(-x1 + x3)*y2 + v2*(-(x2*y1) + x1*y2) + 
  v3*x2*(y1 - y3)) + v2*v3*(-(x3*y2) + x2*y3)) + u3*(v1 - 
  v2)*(v2*v3*(x3*y2 - x2*y3) + v1*(-(v3*x3*y1) + v2*x3*(y1 - y2) + 
  v3*x1*y3 + v2*(-x1 + x2)*y3))))/((u3*(-v1 + v2) + u2*(v1 - v3) + 
  u1*(-v2 + v3))*(-(u1*v2*x1*x2) - u3*v1*x1*x3 + u1*v3*x1*x3 + 
  u3*v2*x2*x3 + u2*x2*(v1*x1 - v3*x3))*(-(u3*v1*v2*x1*x3) + 
  u3*v1*v4*x1*x3 + u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - 
  u4*v1*v3*x1*x4 - u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - 
  u4*v2*v3*x3*x4 - u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - 
  x3) + v3*v4*(x3 - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + 
  v2*v4*(x2 - x4) + v3*v4*(-x3 + x4)))) + (((u1*u1)*(v2 - v3)*(v2*v3*(-x2 
  + x3) + v2*v4*(x2 - x4) + v3*v4*(-x3 + x4))*y1 + (u2*u2)*(v1 - 
  v3)*(v1*v3*(-x1 + x3) + v1*v4*(x1 - x4) + v3*v4*(-x3 + x4))*y2 - 
  u3*(v1 - v2)*(u3*(v1*v2*(x1 - x2) + v2*v4*(x2 - x4) + v1*v4*(-x1 + 
  x4))*y3 + u4*(v1*v3*(-(x3*y1) + x4*(y1 - y3) + x1*y3) + v1*v2*(x3*(y1 
  - y2) + x4*(-y1 + y2) + (-x1 + x2)*y3) + v2*v3*(x3*y2 - x2*y3 + 
  x4*(-y2 + y3)))) + u1*(u4*(v2 - v3)*(v1*v2*(-(x2*y1) + x4*(y1 - y2) + 
  x1*y2) + v2*v3*(x2*y1 - x3*y1 - (x1 - x4)*(y2 - y3)) + v1*v3*(x3*y1 - 
  x1*y3 + x4*(-y1 + y3))) + u3*(v2*(-(v2*v4*(x2 - x4)*(y1 + y3)) + 
  v2*v3*(-(x3*y2) + x1*(y2 - y3) + x2*y3) + v3*v4*(x2*y1 - x1*y2 + 
  x3*y2 + x1*y3 - x4*(y1 + y3))) + v1*((v2*v2)*(x2*y1 - x1*y2 + x3*(-y1 + 
  y2)) + v2*v3*(x3*y1 + x1*y3 - x2*(y1 + y3)) + v2*v4*(x3*(y1 - y2) + 
  x1*y2 + x2*y3 - x4*(y1 + y3)) + v3*v4*(-(x3*y1) - x1*y3 + x4*(y1 + 
  y3))))) + u2*(u4*(v1 - v3)*(v1*v2*(x2*y1 - x1*y2 + x4*(-y1 + y2)) + 
  v1*v3*((x1 - x3)*y2 + x4*(y1 - y3) + x2*(-y1 + y3)) + v2*v3*(x3*y2 - 
  x2*y3 + x4*(-y2 + y3))) + u1*(v1*(v2*v3*(x2*y1 + x1*y2 - x3*(y1 + 
  y2)) + v2*v4*(-(x2*y1) - x1*y2 + x4*(y1 + y2)) + v3*v4*(x3*y2 - 
  x4*(y1 + y2) + x2*(y1 - y3) + x1*y3) + (v3*v3)*(x3*y1 - x1*y3 + x2*(-y1 
  + y3))) + v3*(-(v3*v4*(x3 - x4)*(y1 + y2)) + v2*v4*(x3*y1 + x1*y2 - 
  x4*(y1 + y2) - x1*y3 + x2*y3) + v2*v3*(x3*y2 - x2*y3 + x1*(-y2 + 
  y3)))) + u3*(v2*v3*v4*(-(x3*y2) - x2*y3 + x4*(y2 + y3)) + 
  (v1*v1)*(v2*(-(x2*y1) + x3*y1 + x1*y2 - x3*y2) - v4*(x1 - x4)*(y2 + y3) 
  + v3*(x2*y1 - x3*y1 + x1*y3 - x2*y3)) + v1*(v3*v4*(x3*y1 + x1*y2 - 
  x4*y2 - x4*y3 + x2*(-y1 + y3)) + v2*(v4*(x2*y1 - x3*y1 + x3*y2 - 
  x4*y2 + x1*y3 - x4*y3) + v3*(x3*y2 + x2*y3 - x1*(y2 + 
  y3)))))))*(-(v1*(v1 - v2)*(u3*v1 - u1*v3)*(u3*(v1 - v2) + u1*(v2 - 
  v3) + u2*(-v1 + v3))*(x1*x1)*x3*(-(u3*v1*v2*x1*x3) + u3*v1*v4*x1*x3 + 
  u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - u4*v1*v3*x1*x4 - 
  u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - u4*v2*v3*x3*x4 - 
  u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - x3) + v3*v4*(x3 
  - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + v2*v4*(x2 - x4) 
  + v3*v4*(-x3 + x4)))*(u2*v3*x2*x3*y1 - u2*v4*x2*x3*y1 - 
  u1*v3*x1*x3*y2 + u1*v4*x1*x3*y2 - u2*v1*x1*x2*y3 + u1*v2*x1*x2*y3 - 
  u1*v4*x1*x2*y3 + u2*v4*x1*x2*y3 + u2*v1*x1*x2*y4 - u1*v2*x1*x2*y4 + 
  u1*v4*x1*x2*y4 - u2*v4*x1*x2*y4 + u1*v3*x1*x3*y4 - u1*v4*x1*x3*y4 - 
  u2*v3*x2*x3*y4 + u2*v4*x2*x3*y4 + u3*x3*(v1*x1*(y2 - y4) + v2*x2*(-y1 
  + y4) + v4*(x2*y1 - x1*y2 + x1*y4 - x2*y4)) + u4*(v3*x3*(-(x2*y1) + 
  x1*y2 - x1*y4 + x2*y4) + v1*x1*(-(x3*y2) + x2*y3 - x2*y4 + x3*y4) + 
  v2*x2*(x3*(y1 - y4) + x1*(-y3 + y4))))) - (u1*v2*x1*x2*x3 - 
  u1*v3*x1*x2*x3 - u4*v1*x1*x2*x4 - u1*v2*x1*x2*x4 + u4*v2*x1*x2*x4 + 
  u1*v4*x1*x2*x4 + u4*v1*x1*x3*x4 + u1*v3*x1*x3*x4 - u4*v3*x1*x3*x4 - 
  u1*v4*x1*x3*x4 - u4*v2*x2*x3*x4 + u4*v3*x2*x3*x4 + u3*x3*(v1*x1*(x2 - 
  x4) + v4*(x1 - x2)*x4 + v2*x2*(-x1 + x4)) + u2*x2*(v3*x3*(x1 - x4) + 
  v4*(-x1 + x3)*x4 + v1*x1*(-x3 + x4)))*(v1*x1*(-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(v3*(-x1 + x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 
  + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - 
  u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + 
  v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + 
  v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 
  - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - 
  y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + (u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 
  + y4)))) - (u2*v1*v3*x2*(x1 - x3) + u3*v1*v2*(-x1 + x2)*x3 + 
  u1*v2*v3*x1*(-x2 + x3))*(-(x1*(-(v1*x1) + v3*x3)*(v1*(u4*(-v1 + v2) + 
  u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + 
  u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - 
  v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + 
  u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) 
  + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + 
  y4)))) + (u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + 
  u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) 
  + (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))))/((u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(-(u3*v1*v2*x1*x3) + u3*v1*v4*x1*x3 + 
  u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - u4*v1*v3*x1*x4 - 
  u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - u4*v2*v3*x3*x4 - 
  u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - x3) + v3*v4*(x3 
  - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + v2*v4*(x2 - x4) 
  + v3*v4*(-x3 + x4)))*(-((u1*u4*(v2*x2 - v3*x3)*(x1 - x4) + 
  u3*u4*(v1*x1 - v2*x2)*(x3 - x4) - u1*u3*(x1 - x3)*(v2*x2 - v4*x4) + 
  u2*(-(u4*(v1*x1 - v3*x3)*(x2 - x4)) + u3*(x2 - x3)*(v1*x1 - v4*x4) + 
  u1*(x1 - x2)*(v3*x3 - v4*x4)))*(v1*x1*(-(u1*v2*x1*x2) - u3*v1*x1*x3 + 
  u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - v3*x3))*(-(v3*(-x1 + 
  x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + 
  v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + 
  u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + 
  v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + 
  v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + 
  u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - u1*v3)*x3*((u4*(v1 - 
  v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - 
  y3) + v1*v3*(-y1 + y3)) + (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + 
  v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) - 
  (u2*v1*v3*x2*(x1 - x3) + u3*v1*v2*(-x1 + x2)*x3 + u1*v2*v3*x1*(-x2 + 
  x3))*(-(x1*(-(v1*x1) + v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + 
  u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + 
  v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 
  - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + 
  u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + 
  u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + 
  v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + 
  (u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))) + (-(u3*v1*v2*x1*x3) + 
  u3*v1*v4*x1*x3 + u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - 
  u4*v1*v3*x1*x4 - u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - 
  u4*v2*v3*x3*x4 - u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - 
  x3) + v3*v4*(x3 - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + 
  v2*v4*(x2 - x4) + v3*v4*(-x3 + x4)))*(-((u2*u3*v1*x1*(x2 - x3) + 
  u1*u2*v3*(x1 - x2)*x3 + u1*u3*v2*x2*(-x1 + x3))*(-(x1*(-(v1*x1) + 
  v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + 
  v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + 
  u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + 
  v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + 
  v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + 
  u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4))))) + (-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(x1*(-(u3*v1*x1) + u1*v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - 
  v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + 
  v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 
  - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + 
  u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + 
  u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + 
  v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + 
  u1*(u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))));
  let e = (u2*x2*x3*y1 - 
  u3*x2*x3*y1 - u1*x1*x3*y2 + u3*x1*x3*y2 + u1*x1*x2*y3 - 
  u2*x1*x2*y3)/(u2*v1*x1*x2 - u1*v2*x1*x2 - u3*v1*x1*x3 + u1*v3*x1*x3 + 
  u3*v2*x2*x3 - u2*v3*x2*x3) + ((-(u1*v2*x1*x2*x3) + u1*v3*x1*x2*x3 + 
  u4*v1*x1*x2*x4 + u1*v2*x1*x2*x4 - u4*v2*x1*x2*x4 - u1*v4*x1*x2*x4 - 
  u4*v1*x1*x3*x4 - u1*v3*x1*x3*x4 + u4*v3*x1*x3*x4 + u1*v4*x1*x3*x4 + 
  u4*v2*x2*x3*x4 - u4*v3*x2*x3*x4 + u2*x2*(v1*x1*(x3 - x4) + v4*(x1 - 
  x3)*x4 + v3*x3*(-x1 + x4)) + u3*x3*(v2*x2*(x1 - x4) + v4*(-x1 + 
  x2)*x4 + v1*x1*(-x2 + x4)))*((u3*u3)*(v1 - v2)*x3*(v1*y1 - v2*y2) + 
  (u2*u2)*(v1 - v3)*x2*(v1*y1 - v3*y3) + (u1*u1)*(v2 - v3)*x1*(v2*y2 - v3*y3) 
  + u1*u3*(-((v2*v2)*(x1 + x3)*y2) - v1*v3*(x3*y1 + x1*y3) + v1*v2*(x3*y2 
  + x2*(y1 - y3) + x1*y3) + v2*v3*(x3*y1 + x1*y2 + x2*(-y1 + y3))) + 
  u2*(u1*(-(v1*v2*(x2*y1 + x1*y2)) - (v3*v3)*(x1 + x2)*y3 + v2*v3*(x2*y1 - 
  x3*y1 + x3*y2 + x1*y3) + v1*v3*(x3*(y1 - y2) + x1*y2 + x2*y3)) + 
  u3*(-((v1*v1)*(x2 + x3)*y1) + v1*v3*(x2*y1 - x1*y2 + x3*y2 + x1*y3) - 
  v2*v3*(x3*y2 + x2*y3) + v1*v2*(x3*y1 + x1*y2 - x1*y3 + 
  x2*y3)))))/((u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + 
  v3))*(-(u1*v2*x1*x2) - u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + 
  u2*x2*(v1*x1 - v3*x3))*(-(u3*v1*v2*x1*x3) + u3*v1*v4*x1*x3 + 
  u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - u4*v1*v3*x1*x4 - 
  u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - u4*v2*v3*x3*x4 - 
  u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - x3) + v3*v4*(x3 
  - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + v2*v4*(x2 - x4) 
  + v3*v4*(-x3 + x4)))) + ((-((u3*u3)*u4*(v1 - v2)*(x3 - x4)*(v1*y1 - 
  v2*y2)) + (u1*u1)*(-(u4*(v2 - v3)*(x1 - x4)*(v2*y2 - v3*y3)) + 
  u3*((v2*v2)*(x1 - x3)*y2 + v3*v4*(-(x3*y1) + x4*y1 + x1*y3 - x4*y3) + 
  v2*v4*(-(x4*y1) - x1*y2 + x3*y2 + x2*(y1 - y3) + x4*y3) + 
  v2*v3*(x3*y1 - x1*y3 + x2*(-y1 + y3)))) + u1*u3*(u3*((v2*v2)*(-x1 + 
  x3)*y2 + v1*v2*(-(x3*y1) + x2*(y1 - y3) + x1*y3) + v2*v4*((x1 - 
  x3)*y2 + x4*(y1 - y3) + x2*(-y1 + y3)) + v1*v4*(x3*y1 - x1*y3 + 
  x4*(-y1 + y3))) + u4*((v2*v2)*(x1 + x3 - 2*x4)*y2 + v2*v3*(-(x3*y1) - 
  x1*y2 + x4*y2 + x2*(y1 - y3) + x4*y3) + v1*v2*(-(x3*y2) + x4*(y1 + 
  y2) - x1*y3 + x2*(-y1 + y3)) + v1*v3*(x3*y1 + x1*y3 - x4*(y1 + y3)))) 
  + (u2*u2)*(-(u4*(v1 - v3)*(x2 - x4)*(v1*y1 - v3*y3)) + 
  u1*(v1*v3*(-(x2*y1) + x3*(y1 - y2) + x1*y2) + v1*v4*(x2*y1 - x1*y2 + 
  x4*(-y1 + y2)) + (v3*v3)*(-x1 + x2)*y3 + v3*v4*(x4*(y1 - y2) + x3*(-y1 + 
  y2) + (x1 - x2)*y3)) + u3*((v1*v1)*(x2 - x3)*y1 + v1*v4*(-(x2*y1) + 
  x3*y1 + (x1 - x4)*(y2 - y3)) + v3*v4*(-(x3*y2) + x4*(y2 - y3) + 
  x2*y3) + v1*v3*(x3*y2 - x2*y3 + x1*(-y2 + y3)))) - u2*((u3*u3)*((v1*v1)*(x2 
  - x3)*y1 + v1*v4*(-(x2*y1) + x3*y1 + (x1 - x4)*(y2 - y3)) + 
  v2*v4*(-(x3*y2) + x4*(y2 - y3) + x2*y3) + v1*v2*(x3*y2 - x2*y3 + 
  x1*(-y2 + y3))) - u1*(u1*(v2*v4*(-(x2*y1) + x4*(y1 - y2) + x1*y2) + 
  v2*v3*(x2*y1 - x1*y2 + x3*(-y1 + y2)) + (v3*v3)*(x1 - x2)*y3 + 
  v3*v4*(x3*(y1 - y2) + x4*(-y1 + y2) + (-x1 + x2)*y3)) + 
  u4*(v1*v2*(x2*y1 + x1*y2 - x4*(y1 + y2)) + (v3*v3)*(x1 + x2 - 2*x4)*y3 + 
  v2*v3*(-(x2*y1) + x3*(y1 - y2) + x4*y2 - x1*y3 + x4*y3) + 
  v1*v3*(-(x1*y2) + x3*(-y1 + y2) - x2*y3 + x4*(y1 + y3)))) + 
  u3*(-(u4*((v1*v1)*(x2 + x3 - 2*x4)*y1 + v1*v2*(-(x3*y1) - x1*y2 + x4*(y1 
  + y2) + x1*y3 - x2*y3) + v1*v3*(-(x2*y1) + x1*y2 - x3*y2 - x1*y3 + 
  x4*(y1 + y3)) + v2*v3*(x3*y2 + x2*y3 - x4*(y2 + y3)))) + 
  u1*(v3*v4*(-(x3*(y1 + y2)) + x4*(y1 + y2 - 2*y3) + (x1 + x2)*y3) + 
  v1*(v2*(x2*y1 + x1*y2 - x3*(y1 + y2)) + v4*(x2*y1 + x3*y1 - 2*x4*y1 - 
  x1*y2 + x4*y2 - x1*y3 + x4*y3) + v3*(x3*y1 + x1*y3 - x2*(y1 + y3))) + 
  v2*(v4*((x1 + x3)*y2 - x2*(y1 + y3) + x4*(y1 - 2*y2 + y3)) + 
  v3*(x3*y2 + x2*y3 - x1*(y2 + y3)))))))*(-(v1*(v1 - v2)*(u3*v1 - 
  u1*v3)*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + 
  v3))*(x1*x1)*x3*(-(u3*v1*v2*x1*x3) + u3*v1*v4*x1*x3 + u3*v1*v2*x2*x3 - 
  u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - u4*v1*v3*x1*x4 - u4*v1*v2*x2*x4 + 
  u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - u4*v2*v3*x3*x4 - u3*v1*v4*x3*x4 + 
  u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - x3) + v3*v4*(x3 - x4) + 
  v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + v2*v4*(x2 - x4) + 
  v3*v4*(-x3 + x4)))*(u2*v3*x2*x3*y1 - u2*v4*x2*x3*y1 - u1*v3*x1*x3*y2 
  + u1*v4*x1*x3*y2 - u2*v1*x1*x2*y3 + u1*v2*x1*x2*y3 - u1*v4*x1*x2*y3 + 
  u2*v4*x1*x2*y3 + u2*v1*x1*x2*y4 - u1*v2*x1*x2*y4 + u1*v4*x1*x2*y4 - 
  u2*v4*x1*x2*y4 + u1*v3*x1*x3*y4 - u1*v4*x1*x3*y4 - u2*v3*x2*x3*y4 + 
  u2*v4*x2*x3*y4 + u3*x3*(v1*x1*(y2 - y4) + v2*x2*(-y1 + y4) + 
  v4*(x2*y1 - x1*y2 + x1*y4 - x2*y4)) + u4*(v3*x3*(-(x2*y1) + x1*y2 - 
  x1*y4 + x2*y4) + v1*x1*(-(x3*y2) + x2*y3 - x2*y4 + x3*y4) + 
  v2*x2*(x3*(y1 - y4) + x1*(-y3 + y4))))) - (u1*v2*x1*x2*x3 - 
  u1*v3*x1*x2*x3 - u4*v1*x1*x2*x4 - u1*v2*x1*x2*x4 + u4*v2*x1*x2*x4 + 
  u1*v4*x1*x2*x4 + u4*v1*x1*x3*x4 + u1*v3*x1*x3*x4 - u4*v3*x1*x3*x4 - 
  u1*v4*x1*x3*x4 - u4*v2*x2*x3*x4 + u4*v3*x2*x3*x4 + u3*x3*(v1*x1*(x2 - 
  x4) + v4*(x1 - x2)*x4 + v2*x2*(-x1 + x4)) + u2*x2*(v3*x3*(x1 - x4) + 
  v4*(-x1 + x3)*x4 + v1*x1*(-x3 + x4)))*(v1*x1*(-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(v3*(-x1 + x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 
  + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - 
  u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + 
  v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + 
  v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 
  - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - 
  y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + (u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 
  + y4)))) - (u2*v1*v3*x2*(x1 - x3) + u3*v1*v2*(-x1 + x2)*x3 + 
  u1*v2*v3*x1*(-x2 + x3))*(-(x1*(-(v1*x1) + v3*x3)*(v1*(u4*(-v1 + v2) + 
  u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + 
  u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - 
  v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + 
  u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) 
  + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + 
  y4)))) + (u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + 
  u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) 
  + (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))))/((u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(-(u3*v1*v2*x1*x3) + u3*v1*v4*x1*x3 + 
  u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - u4*v1*v3*x1*x4 - 
  u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - u4*v2*v3*x3*x4 - 
  u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - x3) + v3*v4*(x3 
  - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + v2*v4*(x2 - x4) 
  + v3*v4*(-x3 + x4)))*(-((u1*u4*(v2*x2 - v3*x3)*(x1 - x4) + 
  u3*u4*(v1*x1 - v2*x2)*(x3 - x4) - u1*u3*(x1 - x3)*(v2*x2 - v4*x4) + 
  u2*(-(u4*(v1*x1 - v3*x3)*(x2 - x4)) + u3*(x2 - x3)*(v1*x1 - v4*x4) + 
  u1*(x1 - x2)*(v3*x3 - v4*x4)))*(v1*x1*(-(u1*v2*x1*x2) - u3*v1*x1*x3 + 
  u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - v3*x3))*(-(v3*(-x1 + 
  x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + 
  v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + 
  u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + 
  v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + 
  v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + 
  u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - u1*v3)*x3*((u4*(v1 - 
  v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - 
  y3) + v1*v3*(-y1 + y3)) + (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + 
  v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) - 
  (u2*v1*v3*x2*(x1 - x3) + u3*v1*v2*(-x1 + x2)*x3 + u1*v2*v3*x1*(-x2 + 
  x3))*(-(x1*(-(v1*x1) + v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + 
  u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + 
  v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 
  - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + 
  u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + 
  u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + 
  v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + 
  (u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))) + (-(u3*v1*v2*x1*x3) + 
  u3*v1*v4*x1*x3 + u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - 
  u4*v1*v3*x1*x4 - u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - 
  u4*v2*v3*x3*x4 - u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - 
  x3) + v3*v4*(x3 - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + 
  v2*v4*(x2 - x4) + v3*v4*(-x3 + x4)))*(-((u2*u3*v1*x1*(x2 - x3) + 
  u1*u2*v3*(x1 - x2)*x3 + u1*u3*v2*x2*(-x1 + x3))*(-(x1*(-(v1*x1) + 
  v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + 
  v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + 
  u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + 
  v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + 
  v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + 
  u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4))))) + (-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(x1*(-(u3*v1*x1) + u1*v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - 
  v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + 
  v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 
  - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + 
  u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + 
  u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + 
  v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + 
  u1*(u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))));
  let f = (u3*v2*x2*x3*y1 - 
  u2*v3*x2*x3*y1 - u3*v1*x1*x3*y2 + u1*v3*x1*x3*y2 + u2*v1*x1*x2*y3 - 
  u1*v2*x1*x2*y3)/(u2*v1*x1*x2 - u1*v2*x1*x2 - u3*v1*x1*x3 + 
  u1*v3*x1*x3 + u3*v2*x2*x3 - u2*v3*x2*x3) + ((u1*v2*x1*x2*x3 - 
  u1*v3*x1*x2*x3 - u4*v1*x1*x2*x4 - u1*v2*x1*x2*x4 + u4*v2*x1*x2*x4 + 
  u1*v4*x1*x2*x4 + u4*v1*x1*x3*x4 + u1*v3*x1*x3*x4 - u4*v3*x1*x3*x4 - 
  u1*v4*x1*x3*x4 - u4*v2*x2*x3*x4 + u4*v3*x2*x3*x4 + u3*x3*(v1*x1*(x2 - 
  x4) + v4*(x1 - x2)*x4 + v2*x2*(-x1 + x4)) + u2*x2*(v3*x3*(x1 - x4) + 
  v4*(-x1 + x3)*x4 + v1*x1*(-x3 + x4)))*(-(u3*v1*v2*x3*y1) + 
  u2*v1*v3*x3*y1 + u2*v1*v3*x1*y2 - u1*v2*v3*x1*y2 + u3*v1*v2*x3*y2 - 
  u2*v1*v3*x3*y2 - u2*v1*v3*x1*y3 + u1*v2*v3*x1*y3 - ((u2*v1*v3*x2*(x1 
  - x3) + u3*v1*v2*(-x1 + x2)*x3 + u1*v2*v3*x1*(-x2 + 
  x3))*(u2*v3*x3*(y1 - y2) + u3*v2*x3*(-y1 + y2) + u2*v1*x1*(y2 - y3) + 
  u1*v2*x1*(-y2 + y3)))/(-(u1*v2*x1*x2) - u3*v1*x1*x3 + u1*v3*x1*x3 + 
  u3*v2*x2*x3 + u2*x2*(v1*x1 - v3*x3))))/((u3*(-v1 + v2) + u2*(v1 - v3) 
  + u1*(-v2 + v3))*x1*x3*(-(u3*v1*v2*x1*x3) + u3*v1*v4*x1*x3 + 
  u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - u4*v1*v3*x1*x4 - 
  u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - u4*v2*v3*x3*x4 - 
  u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - x3) + v3*v4*(x3 
  - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + v2*v4*(x2 - x4) 
  + v3*v4*(-x3 + x4)))) + ((((u1*u3*v2*x2*(x1 - x3) + u1*u2*v3*(-x1 + 
  x2)*x3 + u2*u3*v1*x1*(-x2 + x3))*(u2*v3*x3*(y1 - y2) + u3*v2*x3*(-y1 
  + y2) + u2*v1*x1*(y2 - y3) + u1*v2*x1*(-y2 + y3)))/((u3*(v1 - v2) + 
  u1*(v2 - v3) + u2*(-v1 + v3))*x1*x3*(-(u2*v1*x1*x2) + u1*v2*x1*x2 + 
  u3*v1*x1*x3 - u1*v3*x1*x3 - u3*v2*x2*x3 + u2*v3*x2*x3)) + 
  (u1*u2*v3*x3*(y1 - y2) + u2*u3*v1*x1*(y2 - y3) + u1*u3*v2*(x3*(-y1 + 
  y2) + x1*(-y2 + y3)))/((u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + 
  v3))*x1*x3) - ((u1*u4*(v2*x2 - v3*x3)*(x1 - x4) + u3*u4*(v1*x1 - 
  v2*x2)*(x3 - x4) - u1*u3*(x1 - x3)*(v2*x2 - v4*x4) + u2*(-(u4*(v1*x1 
  - v3*x3)*(x2 - x4)) + u3*(x2 - x3)*(v1*x1 - v4*x4) + u1*(x1 - 
  x2)*(v3*x3 - v4*x4)))*((u3*u3)*v1*(v1 - v2)*v2*x3*(y1 - y2) + 
  (u2*u2)*v1*(v1 - v3)*v3*x2*(y1 - y3) + (u1*u1)*v2*(v2 - v3)*v3*x1*(y2 - y3) 
  + u2*u3*v1*(v2*v3*x3*(y1 - y2) + v2*v3*x2*(y1 - y3) + v1*v2*(x1*(y2 - 
  y3) + x2*(-y1 + y3)) + v1*v3*(x3*(-y1 + y2) + x1*(-y2 + y3))) + 
  u1*u3*v2*(v2*v3*x3*(y1 - y2) + v1*v3*(x3*(-y1 + y2) + x1*(y2 - y3)) + 
  v2*v3*x2*(-y1 + y3) + v1*v2*(x2*(y1 - y3) + x1*(-y2 + y3))) + 
  u1*u2*v3*(v2*v3*x3*(-y1 + y2) + v1*v3*(x3*(y1 - y2) + x1*(y2 - y3)) + 
  v2*v3*x2*(y1 - y3) + v1*v2*(x2*(-y1 + y3) + x1*(-y2 + 
  y3)))))/((u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + 
  v3))*(-(u1*v2*x1*x2) - u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + 
  u2*x2*(v1*x1 - v3*x3))*(-(u3*v1*v2*x1*x3) + u3*v1*v4*x1*x3 + 
  u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - u4*v1*v3*x1*x4 - 
  u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - u4*v2*v3*x3*x4 - 
  u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - x3) + v3*v4*(x3 
  - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + v2*v4*(x2 - x4) 
  + v3*v4*(-x3 + x4)))))*(-(v1*(v1 - v2)*(u3*v1 - u1*v3)*(u3*(v1 - v2) 
  + u1*(v2 - v3) + u2*(-v1 + v3))*(x1*x1)*x3*(-(u3*v1*v2*x1*x3) + 
  u3*v1*v4*x1*x3 + u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - 
  u4*v1*v3*x1*x4 - u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - 
  u4*v2*v3*x3*x4 - u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - 
  x3) + v3*v4*(x3 - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + 
  v2*v4*(x2 - x4) + v3*v4*(-x3 + x4)))*(u2*v3*x2*x3*y1 - u2*v4*x2*x3*y1 
  - u1*v3*x1*x3*y2 + u1*v4*x1*x3*y2 - u2*v1*x1*x2*y3 + u1*v2*x1*x2*y3 - 
  u1*v4*x1*x2*y3 + u2*v4*x1*x2*y3 + u2*v1*x1*x2*y4 - u1*v2*x1*x2*y4 + 
  u1*v4*x1*x2*y4 - u2*v4*x1*x2*y4 + u1*v3*x1*x3*y4 - u1*v4*x1*x3*y4 - 
  u2*v3*x2*x3*y4 + u2*v4*x2*x3*y4 + u3*x3*(v1*x1*(y2 - y4) + v2*x2*(-y1 
  + y4) + v4*(x2*y1 - x1*y2 + x1*y4 - x2*y4)) + u4*(v3*x3*(-(x2*y1) + 
  x1*y2 - x1*y4 + x2*y4) + v1*x1*(-(x3*y2) + x2*y3 - x2*y4 + x3*y4) + 
  v2*x2*(x3*(y1 - y4) + x1*(-y3 + y4))))) - (u1*v2*x1*x2*x3 - 
  u1*v3*x1*x2*x3 - u4*v1*x1*x2*x4 - u1*v2*x1*x2*x4 + u4*v2*x1*x2*x4 + 
  u1*v4*x1*x2*x4 + u4*v1*x1*x3*x4 + u1*v3*x1*x3*x4 - u4*v3*x1*x3*x4 - 
  u1*v4*x1*x3*x4 - u4*v2*x2*x3*x4 + u4*v3*x2*x3*x4 + u3*x3*(v1*x1*(x2 - 
  x4) + v4*(x1 - x2)*x4 + v2*x2*(-x1 + x4)) + u2*x2*(v3*x3*(x1 - x4) + 
  v4*(-x1 + x3)*x4 + v1*x1*(-x3 + x4)))*(v1*x1*(-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(v3*(-x1 + x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 
  + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - 
  u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + 
  v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + 
  v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 
  - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - 
  y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + (u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 
  + y4)))) - (u2*v1*v3*x2*(x1 - x3) + u3*v1*v2*(-x1 + x2)*x3 + 
  u1*v2*v3*x1*(-x2 + x3))*(-(x1*(-(v1*x1) + v3*x3)*(v1*(u4*(-v1 + v2) + 
  u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + 
  u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - 
  v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + 
  u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) 
  + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + 
  y4)))) + (u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + 
  u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) 
  + (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))))/(-((u1*u4*(v2*x2 - 
  v3*x3)*(x1 - x4) + u3*u4*(v1*x1 - v2*x2)*(x3 - x4) - u1*u3*(x1 - 
  x3)*(v2*x2 - v4*x4) + u2*(-(u4*(v1*x1 - v3*x3)*(x2 - x4)) + u3*(x2 - 
  x3)*(v1*x1 - v4*x4) + u1*(x1 - x2)*(v3*x3 - 
  v4*x4)))*(v1*x1*(-(u1*v2*x1*x2) - u3*v1*x1*x3 + u1*v3*x1*x3 + 
  u3*v2*x2*x3 + u2*x2*(v1*x1 - v3*x3))*(-(v3*(-x1 + x3)*(v1*(u4*(-v1 + 
  v2) + u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - 
  v3)*y2 + u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + 
  u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) 
  - v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 
  + u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - 
  v3) + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 
  + y4)))) + (u3*v1 - u1*v3)*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 
  + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) - (u2*v1*v3*x2*(x1 - x3) + 
  u3*v1*v2*(-x1 + x2)*x3 + u1*v2*v3*x1*(-x2 + x3))*(-(x1*(-(v1*x1) + 
  v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + 
  v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + 
  u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + 
  v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + 
  v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + 
  u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))) + (-(u3*v1*v2*x1*x3) + 
  u3*v1*v4*x1*x3 + u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - 
  u4*v1*v3*x1*x4 - u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - 
  u4*v2*v3*x3*x4 - u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - 
  x3) + v3*v4*(x3 - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + 
  v2*v4*(x2 - x4) + v3*v4*(-x3 + x4)))*(-((u2*u3*v1*x1*(x2 - x3) + 
  u1*u2*v3*(x1 - x2)*x3 + u1*u3*v2*x2*(-x1 + x3))*(-(x1*(-(v1*x1) + 
  v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + 
  v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + 
  u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + 
  v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + 
  v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + 
  u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4))))) + (-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(x1*(-(u3*v1*x1) + u1*v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - 
  v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + 
  v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 
  - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + 
  u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + 
  u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + 
  v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + 
  u1*(u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4))))));
  let g = (-(v1*v3*x1*x2) + 
  v2*v3*x1*x2 + v1*v4*x1*x2 - v2*v4*x1*x2 + v1*v2*x1*x3 - v2*v3*x1*x3 - 
  v1*v4*x1*x3 + v3*v4*x1*x3 - v1*v2*x2*x3 + v1*v3*x2*x3 + v2*v4*x2*x3 - 
  v3*v4*x2*x3 - v1*v2*x1*x4 + v1*v3*x1*x4 + v2*v4*x1*x4 - v3*v4*x1*x4 + 
  v1*v2*x2*x4 - v2*v3*x2*x4 - v1*v4*x2*x4 + v3*v4*x2*x4 - v1*v3*x3*x4 + 
  v2*v3*x3*x4 + v1*v4*x3*x4 - v2*v4*x3*x4 + ((-(u2*v1*v3*x1) + 
  u2*v1*v4*x1 + u1*v2*v3*x2 - u1*v2*v4*x2 + u4*v1*v2*(-x1 + x2) + 
  u4*v1*v3*(x1 - x3) + u2*v1*v3*x3 - u1*v2*v3*x3 + u1*v3*v4*x3 - 
  u2*v3*v4*x3 + u4*v2*v3*(-x2 + x3) + u3*v2*v4*(x2 - x4) - u2*v1*v4*x4 
  + u1*v2*v4*x4 - u1*v3*v4*x4 + u2*v3*v4*x4 + u3*v1*(v2*(x1 - x2) + 
  v4*(-x1 + x4)))*(-(v1*(v1 - v2)*(u3*v1 - u1*v3)*(u3*(v1 - v2) + 
  u1*(v2 - v3) + u2*(-v1 + v3))*(x1*x1)*x3*(-(u3*v1*v2*x1*x3) + 
  u3*v1*v4*x1*x3 + u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - 
  u4*v1*v3*x1*x4 - u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - 
  u4*v2*v3*x3*x4 - u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - 
  x3) + v3*v4*(x3 - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + 
  v2*v4*(x2 - x4) + v3*v4*(-x3 + x4)))*(u2*v3*x2*x3*y1 - u2*v4*x2*x3*y1 
  - u1*v3*x1*x3*y2 + u1*v4*x1*x3*y2 - u2*v1*x1*x2*y3 + u1*v2*x1*x2*y3 - 
  u1*v4*x1*x2*y3 + u2*v4*x1*x2*y3 + u2*v1*x1*x2*y4 - u1*v2*x1*x2*y4 + 
  u1*v4*x1*x2*y4 - u2*v4*x1*x2*y4 + u1*v3*x1*x3*y4 - u1*v4*x1*x3*y4 - 
  u2*v3*x2*x3*y4 + u2*v4*x2*x3*y4 + u3*x3*(v1*x1*(y2 - y4) + v2*x2*(-y1 
  + y4) + v4*(x2*y1 - x1*y2 + x1*y4 - x2*y4)) + u4*(v3*x3*(-(x2*y1) + 
  x1*y2 - x1*y4 + x2*y4) + v1*x1*(-(x3*y2) + x2*y3 - x2*y4 + x3*y4) + 
  v2*x2*(x3*(y1 - y4) + x1*(-y3 + y4))))) - (u1*v2*x1*x2*x3 - 
  u1*v3*x1*x2*x3 - u4*v1*x1*x2*x4 - u1*v2*x1*x2*x4 + u4*v2*x1*x2*x4 + 
  u1*v4*x1*x2*x4 + u4*v1*x1*x3*x4 + u1*v3*x1*x3*x4 - u4*v3*x1*x3*x4 - 
  u1*v4*x1*x3*x4 - u4*v2*x2*x3*x4 + u4*v3*x2*x3*x4 + u3*x3*(v1*x1*(x2 - 
  x4) + v4*(x1 - x2)*x4 + v2*x2*(-x1 + x4)) + u2*x2*(v3*x3*(x1 - x4) + 
  v4*(-x1 + x3)*x4 + v1*x1*(-x3 + x4)))*(v1*x1*(-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(v3*(-x1 + x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 
  + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - 
  u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + 
  v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + 
  v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 
  - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - 
  y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + (u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 
  + y4)))) - (u2*v1*v3*x2*(x1 - x3) + u3*v1*v2*(-x1 + x2)*x3 + 
  u1*v2*v3*x1*(-x2 + x3))*(-(x1*(-(v1*x1) + v3*x3)*(v1*(u4*(-v1 + v2) + 
  u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + 
  u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - 
  v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + 
  u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) 
  + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + 
  y4)))) + (u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + 
  u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) 
  + (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))))/(-((u1*u4*(v2*x2 - 
  v3*x3)*(x1 - x4) + u3*u4*(v1*x1 - v2*x2)*(x3 - x4) - u1*u3*(x1 - 
  x3)*(v2*x2 - v4*x4) + u2*(-(u4*(v1*x1 - v3*x3)*(x2 - x4)) + u3*(x2 - 
  x3)*(v1*x1 - v4*x4) + u1*(x1 - x2)*(v3*x3 - 
  v4*x4)))*(v1*x1*(-(u1*v2*x1*x2) - u3*v1*x1*x3 + u1*v3*x1*x3 + 
  u3*v2*x2*x3 + u2*x2*(v1*x1 - v3*x3))*(-(v3*(-x1 + x3)*(v1*(u4*(-v1 + 
  v2) + u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - 
  v3)*y2 + u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + 
  u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) 
  - v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 
  + u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - 
  v3) + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 
  + y4)))) + (u3*v1 - u1*v3)*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 
  + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) - (u2*v1*v3*x2*(x1 - x3) + 
  u3*v1*v2*(-x1 + x2)*x3 + u1*v2*v3*x1*(-x2 + x3))*(-(x1*(-(v1*x1) + 
  v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + 
  v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + 
  u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + 
  v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + 
  v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + 
  u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))) + (-(u3*v1*v2*x1*x3) + 
  u3*v1*v4*x1*x3 + u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - 
  u4*v1*v3*x1*x4 - u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - 
  u4*v2*v3*x3*x4 - u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - 
  x3) + v3*v4*(x3 - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + 
  v2*v4*(x2 - x4) + v3*v4*(-x3 + x4)))*(-((u2*u3*v1*x1*(x2 - x3) + 
  u1*u2*v3*(x1 - x2)*x3 + u1*u3*v2*x2*(-x1 + x3))*(-(x1*(-(v1*x1) + 
  v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + 
  v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + 
  u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + 
  v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + 
  v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + 
  u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4))))) + (-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(x1*(-(u3*v1*x1) + u1*v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - 
  v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + 
  v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 
  - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + 
  u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + 
  u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + 
  v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + 
  u1*(u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))))/(-(u3*v1*v2*x1*x3) + 
  u3*v1*v4*x1*x3 + u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - 
  u4*v1*v3*x1*x4 - u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - 
  u4*v2*v3*x3*x4 - u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - 
  x3) + v3*v4*(x3 - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + 
  v2*v4*(x2 - x4) + v3*v4*(-x3 + x4)));
  let h = (-(u1*v3*x1*x2) + 
  u2*v3*x1*x2 + u1*v4*x1*x2 - u2*v4*x1*x2 + u1*v2*x1*x3 - u3*v2*x1*x3 - 
  u1*v4*x1*x3 + u3*v4*x1*x3 - u2*v1*x2*x3 + u3*v1*x2*x3 + u2*v4*x2*x3 - 
  u3*v4*x2*x3 - u1*v2*x1*x4 + u4*v2*x1*x4 + u1*v3*x1*x4 - u4*v3*x1*x4 + 
  u2*v1*x2*x4 - u4*v1*x2*x4 - u2*v3*x2*x4 + u4*v3*x2*x4 - u3*v1*x3*x4 + 
  u4*v1*x3*x4 + u3*v2*x3*x4 - u4*v2*x3*x4 + ((-(u2*u3*(v1 - v4)*(x2 - 
  x3)) + u1*(-(u2*(v3 - v4)*(x1 - x2)) + u3*(v2 - v4)*(x1 - x3) - 
  u4*(v2 - v3)*(x1 - x4)) + u2*u4*(v1 - v3)*(x2 - x4) - u3*u4*(v1 - 
  v2)*(x3 - x4))*(-(v1*(v1 - v2)*(u3*v1 - u1*v3)*(u3*(v1 - v2) + u1*(v2 
  - v3) + u2*(-v1 + v3))*(x1*x1)*x3*(-(u3*v1*v2*x1*x3) + u3*v1*v4*x1*x3 + 
  u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - u4*v1*v3*x1*x4 - 
  u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - u4*v2*v3*x3*x4 - 
  u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - x3) + v3*v4*(x3 
  - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + v2*v4*(x2 - x4) 
  + v3*v4*(-x3 + x4)))*(u2*v3*x2*x3*y1 - u2*v4*x2*x3*y1 - 
  u1*v3*x1*x3*y2 + u1*v4*x1*x3*y2 - u2*v1*x1*x2*y3 + u1*v2*x1*x2*y3 - 
  u1*v4*x1*x2*y3 + u2*v4*x1*x2*y3 + u2*v1*x1*x2*y4 - u1*v2*x1*x2*y4 + 
  u1*v4*x1*x2*y4 - u2*v4*x1*x2*y4 + u1*v3*x1*x3*y4 - u1*v4*x1*x3*y4 - 
  u2*v3*x2*x3*y4 + u2*v4*x2*x3*y4 + u3*x3*(v1*x1*(y2 - y4) + v2*x2*(-y1 
  + y4) + v4*(x2*y1 - x1*y2 + x1*y4 - x2*y4)) + u4*(v3*x3*(-(x2*y1) + 
  x1*y2 - x1*y4 + x2*y4) + v1*x1*(-(x3*y2) + x2*y3 - x2*y4 + x3*y4) + 
  v2*x2*(x3*(y1 - y4) + x1*(-y3 + y4))))) - (u1*v2*x1*x2*x3 - 
  u1*v3*x1*x2*x3 - u4*v1*x1*x2*x4 - u1*v2*x1*x2*x4 + u4*v2*x1*x2*x4 + 
  u1*v4*x1*x2*x4 + u4*v1*x1*x3*x4 + u1*v3*x1*x3*x4 - u4*v3*x1*x3*x4 - 
  u1*v4*x1*x3*x4 - u4*v2*x2*x3*x4 + u4*v3*x2*x3*x4 + u3*x3*(v1*x1*(x2 - 
  x4) + v4*(x1 - x2)*x4 + v2*x2*(-x1 + x4)) + u2*x2*(v3*x3*(x1 - x4) + 
  v4*(-x1 + x3)*x4 + v1*x1*(-x3 + x4)))*(v1*x1*(-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(v3*(-x1 + x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 
  + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - 
  u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + 
  v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + 
  v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 
  - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - 
  y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + (u3*(-v1 + v2) + u2*(v1 - 
  v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 
  + y4)))) - (u2*v1*v3*x2*(x1 - x3) + u3*v1*v2*(-x1 + x2)*x3 + 
  u1*v2*v3*x1*(-x2 + x3))*(-(x1*(-(v1*x1) + v3*x3)*(v1*(u4*(-v1 + v2) + 
  u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + 
  u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - 
  v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + 
  u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) 
  + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + 
  y4)))) + (u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + 
  u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) 
  + (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))))/(-((u1*u4*(v2*x2 - 
  v3*x3)*(x1 - x4) + u3*u4*(v1*x1 - v2*x2)*(x3 - x4) - u1*u3*(x1 - 
  x3)*(v2*x2 - v4*x4) + u2*(-(u4*(v1*x1 - v3*x3)*(x2 - x4)) + u3*(x2 - 
  x3)*(v1*x1 - v4*x4) + u1*(x1 - x2)*(v3*x3 - 
  v4*x4)))*(v1*x1*(-(u1*v2*x1*x2) - u3*v1*x1*x3 + u1*v3*x1*x3 + 
  u3*v2*x2*x3 + u2*x2*(v1*x1 - v3*x3))*(-(v3*(-x1 + x3)*(v1*(u4*(-v1 + 
  v2) + u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - 
  v3)*y2 + u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + 
  u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) 
  - v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 
  + u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - 
  v3) + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 
  + y4)))) + (u3*v1 - u1*v3)*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 
  + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) - (u2*v1*v3*x2*(x1 - x3) + 
  u3*v1*v2*(-x1 + x2)*x3 + u1*v2*v3*x1*(-x2 + x3))*(-(x1*(-(v1*x1) + 
  v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + 
  v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + 
  u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + 
  v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + 
  v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + 
  u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))) + (-(u3*v1*v2*x1*x3) + 
  u3*v1*v4*x1*x3 + u3*v1*v2*x2*x3 - u3*v2*v4*x2*x3 + u4*v1*v2*x1*x4 - 
  u4*v1*v3*x1*x4 - u4*v1*v2*x2*x4 + u4*v2*v3*x2*x4 + u4*v1*v3*x3*x4 - 
  u4*v2*v3*x3*x4 - u3*v1*v4*x3*x4 + u3*v2*v4*x3*x4 + u2*x2*(v1*v3*(x1 - 
  x3) + v3*v4*(x3 - x4) + v1*v4*(-x1 + x4)) + u1*x1*(v2*v3*(-x2 + x3) + 
  v2*v4*(x2 - x4) + v3*v4*(-x3 + x4)))*(-((u2*u3*v1*x1*(x2 - x3) + 
  u1*u2*v3*(x1 - x2)*x3 + u1*u3*v2*x2*(-x1 + x3))*(-(x1*(-(v1*x1) + 
  v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - v4) + u1*(-v2 + v4))*(u1*(-v2 + 
  v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + v2)*y3) - u1*(u4*(v1 - v2) + 
  u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + 
  v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + 
  v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + u4*(-v1 + v2)*y4) + 
  u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + (u3*v1 - 
  u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4))))) + (-(u1*v2*x1*x2) - 
  u3*v1*x1*x3 + u1*v3*x1*x3 + u3*v2*x2*x3 + u2*x2*(v1*x1 - 
  v3*x3))*(-(x1*(-(u3*v1*x1) + u1*v3*x3)*(v1*(u4*(-v1 + v2) + u2*(v1 - 
  v4) + u1*(-v2 + v4))*(u1*(-v2 + v3)*y1 + u2*(v1 - v3)*y2 + u3*(-v1 + 
  v2)*y3) - u1*(u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + v4))*(v1*v2*(y1 
  - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) - v1*(u3*(-v1 + v2) + 
  u2*(v1 - v3) + u1*(-v2 + v3))*(u1*(-v2 + v4)*y1 + u2*(v1 - v4)*y2 + 
  u4*(-v1 + v2)*y4) + u1*(u3*(v1 - v2) + u1*(v2 - v3) + u2*(-v1 + 
  v3))*(v1*v2*(y1 - y2) + v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))) + 
  u1*(u3*v1 - u1*v3)*x1*x3*((u4*(v1 - v2) + u1*(v2 - v4) + u2*(-v1 + 
  v4))*(v1*v2*(y1 - y2) + v2*v3*(y2 - y3) + v1*v3*(-y1 + y3)) + 
  (u3*(-v1 + v2) + u2*(v1 - v3) + u1*(-v2 + v3))*(v1*v2*(y1 - y2) + 
  v2*v4*(y2 - y4) + v1*v4*(-y1 + y4)))))))/(u3*v1*v2*x1*x3 - 
  u3*v1*v4*x1*x3 - u3*v1*v2*x2*x3 + u3*v2*v4*x2*x3 - u4*v1*v2*x1*x4 + 
  u4*v1*v3*x1*x4 + u4*v1*v2*x2*x4 - u4*v2*v3*x2*x4 - u4*v1*v3*x3*x4 + 
  u4*v2*v3*x3*x4 + u3*v1*v4*x3*x4 - u3*v2*v4*x3*x4 + u1*x1*(v2*v3*(x2 - 
  x3) + v3*v4*(x3 - x4) + v2*v4*(-x2 + x4)) + u2*x2*(v1*v3*(-x1 + x3) + 
  v1*v4*(x1 - x4) + v3*v4*(-x3 + x4)));
  
  return [a,b,c,d,e,f,g,h];
}

function applyHMatrix(H,u,v){
  let x = H[0] * u + H[1] * v + H[2];
  let y = H[3] * u + H[4] * v + H[5];
  let z = H[6] * u + H[7] * v + 1;
  return [x/z,y/z];
}
